/*****************************************************************************************
* Mixins
*
*****************************************************************************************/
.Vertical-gradient-two-colors (@first: white, @first-start: 0%, @second: white, @second-start: 100%) {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(@first-start, @first), color-stop(@second-start, @second));
    background-image: -webkit-linear-gradient(top, @first @first-start, @second @second-start);
    background-image: -moz-linear-gradient(top, @first @first-start, @second @second-start);
    background-image: linear-gradient(to bottom, @first @first-start, @second @second-start);
}

.Vertical-gradient-three-colors (@first: white, @first-start: 0%, @second: white, @second-start: 50%, @third: white, @third-start: 100%) {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(@first-start, @first), color-stop(@second-start, @second), color-stop(@third-start, @third));
    background-image: -webkit-linear-gradient(top, @first @first-start, @second @second-start, @third @third-start);
    background-image: -moz-linear-gradient(top, @first @first-start, @second @second-start, @third @third-start);
    background-image: linear-gradient(to bottom, @first @first-start, @second @second-start, @third @third-start);
}

// for just either inset or normal but not both
.border-radius (@value1: 5px, @value2:X, ...) {
// So this is a hack which forces two arguments to be passed to the mixin
// which casues less to not add commas between the individual values for the
// shadow postion etc
    @value: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
    -webkit-border-radius: @value;
    -moz-border-radius: @value;
    border-radius: @value;
}

.transition (...) {
    // this is needed to allow commas in the @param
    @value: ~`"@{arguments}".replace(/[\[\]]/g, '').replace(/,(?![^(]*\))/g, '')`;
    -webkit-transition: @value;
    -moz-transition: @value;
    transition: @value;
}

.transform (@params){
    -webkit-transform: @params;
    -moz-transform: @params;
    transform: @params;
}

.appearance (@param){
    -webkit-appearance: @param;
    -moz-appearance: @param;
}

.box-sizing (@param){
    -webkit-box-sizing: @param;
    -moz-box-sizing: @param;
    box-sizing: @param;
}

// for just either inset or normal but not both
.box-shadow (@value1, @value2:X, ...) {
    // So this is a hack which forces two arguments to be passed to the mixin
    // which casues less to not add commas between the individual values for the
    // shadow postion etc
    @value: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
    -webkit-box-shadow: @value;
    -moz-box-shadow: @value;
    box-shadow: @value;
}

.Button(@gradientStart: #32b4e4, @gradientEnd: #26a5d3, @textColor: white, @border: #3a9fc4) {
    .border-radius(4px);
    .box-shadow(0 1px 2px rgba(0,0,0,0.15), inset 0px 0px 0px 1px rgba(255,255,255,0.25));
    .bold-font;
    .Vertical-gradient-two-colors(@gradientStart, 0%, @gradientEnd, 100%);
    .box-sizing(border-box);
    padding: 0 @default-padding;
    border: 1px solid @border;
    color: @textColor;
    text-align: center;
    text-decoration: none;
    text-shadow: 0px -1px 1px rgba(0,0,0,0.2);
    font-size: 1em;
    line-height: 1.5em;

    &:active {
        .Vertical-gradient-two-colors(darken(@gradientStart, 10%), 0%, darken(@gradientEnd, 10%), 100%);
    }
}

