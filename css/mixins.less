/*****************************************************************************************
* Mixins
*
*****************************************************************************************/
.Vertical-gradient-two-colors (@first: white, @first-start: 0%, @second: white, @second-start: 100%) {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(@first-start, @first), color-stop(@second-start, @second));
    background-image: -webkit-linear-gradient(top, @first @first-start, @second @second-start);
    background-image: -moz-linear-gradient(top, @first @first-start, @second @second-start);
    background-image: linear-gradient(to bottom, @first @first-start, @second @second-start);
}

.Diagonal-gradient-two-colors (@first: white, @first-start: 0%, @second: white, @second-start: 100%) {
    background-image: -webkit-gradient(linear, left top, right bottom, color-stop(@first-start, @first), color-stop(@second-start, @second));
    background-image: -webkit-linear-gradient(-45deg, @first @first-start, @second @second-start);
    background-image: -moz-linear-gradient(-45deg, @first @first-start, @second @second-start);
    background-image: linear-gradient(135deg, @first @first-start, @second @second-start);
}

.Vertical-gradient-two-colors-with-image (@url, @first: white, @first-start: 0%, @second: white, @second-start: 100%) {
    background-image: url(@url), -webkit-gradient(linear, left top, left bottom, color-stop(@first-start, @first), color-stop(@second-start, @second));
    background-image: url(@url), -webkit-linear-gradient(top, @first @first-start, @second @second-start);
    background-image: url(@url), -moz-linear-gradient(top, @first @first-start, @second @second-start);
    background-image: url(@url), linear-gradient(to bottom, @first @first-start, @second @second-start);
}

.Vertical-gradient-two-colors-with-image-on-top (@url, @first: white, @first-start: 0%, @second: white, @second-start: 100%) {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(@first-start, @first), color-stop(@second-start, @second)), url(@url);
    background-image: -webkit-linear-gradient(top, @first @first-start, @second @second-start), url(@url);
    background-image: -moz-linear-gradient(top, @first @first-start, @second @second-start), url(@url);
    background-image: linear-gradient(to bottom, @first @first-start, @second @second-start), url(@url);
}

.Vertical-gradient-three-colors (@first: white, @first-start: 0%, @second: white, @second-start: 50%, @third: white, @third-start: 100%) {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(@first-start, @first), color-stop(@second-start, @second), color-stop(@third-start, @third));
    background-image: -webkit-linear-gradient(top, @first @first-start, @second @second-start, @third @third-start);
    background-image: -moz-linear-gradient(top, @first @first-start, @second @second-start, @third @third-start);
    background-image: linear-gradient(to bottom, @first @first-start, @second @second-start, @third @third-start);
}

.Vertical-gradient-four-colors (@first: white, @first-start: 0%, @second: white, @second-start: 25%, @third: white, @third-start: 50%, @fourth: white, @fourth-start: 100%) {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(@first-start, @first), color-stop(@second-start, @second), color-stop(@third-start, @third), color-stop(@fourth-start, @fourth));
    background-image: -webkit-linear-gradient(top, @first @first-start, @second @second-start, @third @third-start, @fourth @fourth-start);
    background-image: -moz-linear-gradient(top, @first @first-start, @second @second-start, @third @third-start, @fourth @fourth-start);
    background-image: linear-gradient(to bottom, @first @first-start, @second @second-start, @third @third-start, @fourth @fourth-start);
}

.Horizontal-gradient-two-colors (@first: white, @first-start: 0%, @second: white, @second-start: 100%) {
    background-image: -webkit-gradient(linear, left top, right top, color-stop(@first-start, @first), color-stop(@second-start, @second));
    background-image: -webkit-linear-gradient(left, @first @first-start, @second @second-start);
    background-image: -moz-linear-gradient(left, @first @first-start, @second @second-start);
    background-image: linear-gradient(to right, @first @first-start, @second @second-start);
}


.Horizontal-gradient-two-colors-important (@first: white, @first-start: 0%, @second: white, @second-start: 100%) {
    background-image: -webkit-gradient(linear, left top, right top, color-stop(@first-start, @first), color-stop(@second-start, @second)) !important;
    background-image: -webkit-linear-gradient(left, @first @first-start, @second @second-start) !important;
    background-image: -moz-linear-gradient(left, @first @first-start, @second @second-start) !important;
    background-image: linear-gradient(to right, @first @first-start, @second @second-start) !important;
}

.Radial-background (@start: @background-gradient-start, @end: @background-gradient-end){
    background-color: @end;
    background-image: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, @start), color-stop(100%,@end));
    background-image: -webkit-radial-gradient(center, ellipse cover,  @start 0%, @end 100%);
    background-image: radial-gradient(ellipse at center,  @start 0%, @end 100%);
}

.Translate (@x: 0px, @y: 0px) {
    -webkit-transform: translate(@x, @y);
    -moz-transform: translate(@x, @y);
    transform: translate(@x, @y);
}

.Translate3d (@x: 0px, @y: 0px, @z: 0px) {
    -webkit-transform: translate3d(@x, @y, @z);
    -moz-transform: translate3d(@x, @y, @z);
    transform: translate3d(@x, @y, @z);
}

.Translate-and-scale (@x: 0px, @y: 0px, @scale: 1) {
    -webkit-transform: translate(@x, @y) scale(@scale);
    -moz-transform: translate(@x, @y) scale(@scale);
    transform: translate(@x, @y) scale(@scale);
}

.Translate3d-and-rotate (@x: 0px, @y: 0px, @z: 0px, @deg: 0deg) {
    -webkit-transform: translate3d(@x, @y, @z) rotate(@deg);
    -moz-transform: translate3d(@x, @y, @z) rotate(@deg);
    transform: translate3d(@x, @y, @z) rotate(@deg);
}

.Rotate (@deg: 0deg) {
    -webkit-transform: rotate(@deg);
    -moz-transform: rotate(@deg);
    transform: rotate(@deg);
}

.Scale (@scale: 1) {
    -webkit-transform: scale(@scale);
    -moz-transform: scale(@scale);
    transform: scale(@scale);
}

.Down-arrow(@colour: white, @left-position: 30px) {
    border-color: @colour transparent transparent transparent;
    border-style: solid;
    border-width: 10px;
    height: 0;
    width: 0;
    position: relative;
    left: @left-position;
    margin-bottom: -10px;
}

.Up-arrow(@colour: white, @left-position: 30px) {
    border-color: transparent transparent @colour transparent;
    border-style: solid;
    border-width: 10px;
    height: 0;
    width: 0;
    position: relative;
    left: @left-position;
    margin-bottom: -11px;
}

.Arrow(@size, @color, @border){
    content: "";
    position: absolute;
    width: @size;
    height: @size;
    border: 1px solid @border;
    .transform(rotate(45deg));
    background: @color;
    margin-left: -(@size/2);
    z-index: 0;
}

.Text(@colour: white, @font-size: 16px) {
    color: @colour;
    font-size: @font-size;
    text-decoration: none;
}

.X-small-text(@colour: white) {
    .Text(@colour, 10px);
}

.Small-text(@colour: white) {
    .Text(@colour, 12px);
}

.Medium-text(@colour: white) {
    .Text(@colour, 15px);
}

.Medium-larger-text(@colour: white) {
    .Text(@colour, 18px);
}

.Large-text(@colour: white) {
    .Text(@colour, 22px);
}

// for just either inset or normal but not both
.border-radius (@value1: 5px, @value2:X, ...) {
// So this is a hack which forces two arguments to be passed to the mixin
// which casues less to not add commas between the individual values for the
// shadow postion etc
    @value: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
    -webkit-border-radius: @value;
    -moz-border-radius: @value;
    border-radius: @value;
}

.text-top-shadow(@colour: rgba(0, 0, 0, 0.2)) {
    text-shadow: 0px -1px 1px @colour;
}

.text-bottom-shadow(@colour: rgba(0, 0, 0, 0.2)) {
    text-shadow: 0px 1px 1px @colour;
}

.display-box {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    width: 100%;
    .box-sizing(border-box);
}

.box-flex (@flex: 1) {
    -webkit-box-flex: @flex;
    -moz-box-flex: @flex;
    box-flex: @flex;
}

.box-align (@value) {
    -webkit-box-align: @value;
    -moz-box-align: @value;
    box-align: @value;
}

.box-align-center {
    .box-align(center);
}

.transition (...) {
    // this is needed to allow commas in the @param
    @value: ~`"@{arguments}".replace(/[\[\]]/g, '').replace(/,(?![^(]*\))/g, '')`;
    -webkit-transition: @value;
    -moz-transition: @value;
    transition: @value;
}

.transition-transform (@time, @easing) {
    -webkit-transition: -webkit-transform @time @easing;
    -moz-transition: -moz-transform @time @easing;
    transition: transform @time @easing;
}

.transition-duration (@duration: 150ms) {
    -moz-transition-duration: @duration;
    -webkit-transition-duration: @duration;
    transition-duration: @duration;
}

.transform (@params){
    -webkit-transform: @params;
    -moz-transform: @params;
    transform: @params;
}

.box-orient (@orient){
    -webkit-box-orient: @orient;
    -moz-box-orient: @orient;
}

.box-align (@align){
    -webkit-box-align: @align;
    -moz-box-align: @align;
}

.box-pack (@pack){
    -webkit-box-pack: @pack;
    -moz-box-pack: @pack;
}

.font-smoothing (@param){
    -webkit-font-smoothing: @param;
}

.overflow-scrolling (@param){
    -webkit-overflow-scrolling: @param;
}

.appearance (@param){
    -webkit-appearance: @param;
    -moz-appearance: @param;
}

.user-select (@param){
    -webkit-user-select: @param;
    -moz-user-select: @param;
}

.box-sizing (@param){
    -webkit-box-sizing: @param;
    box-sizing: @param;
}

.background-clip (@param){
    -webkit-background-clip: @param;
    -moz-background-clip: @param;
    background-clip: @param;
}

.transition-delay (@param){
    -webkit-transition-delay: @param;
    -moz-transition-delay: @param;
    transition-delay: @param;
}
.transform-origin (@param) {
    -webkit-transform-origin: @param;
    -moz-transform-origin: @param;
    transform-origin: @param;
}

.border-bottom-right-radius (@param){
    -webkit-border-bottom-right-radius: @param;
    -moz-border-bottom-radius: @param;
    border-bottom-right-radius: @param;
}

.animation-duration (@param){
    -webkit-animation-duration: @param;
    -moz-animation-duration: @param;
    animation-duration: @param;
}

.animation-fill-mode (@param){
    -webkit-animation-fill-mode: @param;
    -moz-animation-fill-mode: @param;
    animation-fill-mode: @param;
}

.animation-name (@param){
    -webkit-animation-name: @param;
    -moz-animation-name: @param;
    animation-name: @param;
}

.tap-highlight-color (@param){
    -webkit-tap-highlight-color: @param;
}

.text-size-adjust (@param){
    -webkit-text-size-adjust: @param;
}

.backface-visibility (@param){
    -webkit-backface-visibility: @param;
    -moz-backface-visibility: @param;
    backface-visibility: @param;
}

.perspective (@param){
    -webkit-perspective: @param;
    -moz-perspective: @param;
    perpective: @param;
}

.box-direction (@param){
    -webkit-box-direction: @param;
    -moz-box-direction: @param;
}

.animation-iteration-count (@param){
    -webkit-animation-iteration-count: @param;
    -moz-animation-iteration-count: @param;
    animation-iteration-count: @param;
}

.animation-timing-function (@param) {
    -webkit-animation-timing-function: @param;
    -moz-animation-timing-function: @param;
    animation-timing-function: @param;
}
.animation-delay (@delay) {
    -webkit-animation-delay: @delay;
    -moz-animation-delay: @delay;
    animation-delay: @delay;
}

// for just either inset or normal but not both
.box-shadow (@value1, @value2:X, ...) {
    // So this is a hack which forces two arguments to be passed to the mixin
    // which casues less to not add commas between the individual values for the
    // shadow postion etc
    @value: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
    -webkit-box-shadow: @value;
    -moz-box-shadow: @value;
    box-shadow: @value;
}

.light-border {
    border: 1px solid @light-border-color;
}

.button {
    .bold-font;
    .text-top-shadow;
    display: block;
    text-align: center;
    margin: 0;
    padding: 10px 0;
    background-color: rgb(127,187, 63);
    color: white;
    .border-radius(15px);

    &.inline {
        display: inline-block;
        padding: @default-padding (@default-padding * 1.5);
    }
}

.padded {
    padding: @default-padding;
}

.Button(@gradientStart: #32b4e4, @gradientEnd: #26a5d3, @textColor: white, @border: #3a9fc4) {
    .border-radius(4px);
    .box-shadow(0 1px 2px rgba(0,0,0,0.15), inset 0px 0px 0px 1px rgba(255,255,255,0.25));
    .font-smoothing(antialiased);
    .bold-font;
    .Medium-larger-text(@textColor);
    .text-top-shadow;
    .Vertical-gradient-two-colors(@gradientStart, 0%, @gradientEnd, 100%);
    border: 1px solid @border;
    line-height: 20px;
    padding: @default-padding 0;
    text-align: center;

    &:active {
        .Vertical-gradient-two-colors(darken(@gradientStart, 10%), 0%, darken(@gradientEnd, 10%), 100%);
    }
}

.Menu-button {
    .bold-font;
    .border-radius;
    .box-shadow(inset 0 1px 1px rgba(255,255,255,0.5), inset 0px 0px 1px rgba(255,255,255,0.2), 0px 1px 1px rgba(255,255,255,0.35));
    .Vertical-gradient-two-colors(rgb(246,244,243), 0%, rgb(231,231,230), 100%);
    .text-bottom-shadow(rgba(255, 255, 255, 0.5));

    position: absolute;
    width: auto;
    border: 1px solid rgb(189, 182, 182);
    height: 33px;
    line-height: 32px;
    font-size: 13px;
    background-position: center;
    background-repeat: no-repeat;
    color: rgb(102,102,102);
}

.Stamp(@background: '') {
    background: url(@background) no-repeat;
    background-size: 130px 130px;
    width: 130px;
    height: 130px;
    display: inline-block;
    position: absolute;
    margin: -65px 0 0 -65px;
    left: 50%;
    top: 50%;
    opacity: 0;
    pointer-events: none;
    .transform(translateZ(0));
}

.Blur(@pixels: 5px) {
    -webkit-filter: blur(@pixels);
    -moz-filter: blur(@pixels);
    -o-filter: blur(@pixels);
}

.chevron(){
    position: relative;

    &:after {
        content: "";
        background: url('../img/misc/chevron-light.png') left top no-repeat;
        background-size: contain;
        width: 1em;
        height: 1em;
        position: absolute;
        right: 0.5em;
        top: 50%;
        margin-top: -0.5em;
    }
}

